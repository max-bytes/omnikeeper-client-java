openapi: 3.0.1
info:
  title: Landscape omnikeeper REST API
  version: v1
servers:
- url: /
paths:
  /api/v{version}/Ingest/AnsibleInventoryScan:
    post:
      operationId: AnsibleInventoryScanIngest_IngestAnsibleInventoryScan
      parameters:
      - explode: true
        in: query
        name: writeLayerID
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: searchLayerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          text/plain:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AnsibleInventoryScanDTO'
        required: true
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - AnsibleInventoryScanIngest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v{version}/AttributeValueImage:
    get:
      operationId: AttributeValueImage_Get
      parameters:
      - explode: true
        in: query
        name: ciid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: attributeName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: layerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: index
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: atTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - AttributeValueImage
      x-accepts:
      - application/json
    post:
      operationId: AttributeValueImage_Post
      parameters:
      - explode: true
        in: query
        name: ciid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: attributeName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: layerID
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: forceArray
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              files:
                style: form
            schema:
              $ref: '#/components/schemas/AttributeValueImage_Post_request'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - AttributeValueImage
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /.well-known/openid-configuration:
    get:
      operationId: AuthRedirect_Index
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - AuthRedirect
      x-accepts:
      - application/json
  /api/v{version}/Cytoscape/traitCentric:
    get:
      operationId: Cytoscape_TraitCentric
      parameters:
      - explode: true
        in: query
        name: layerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: traitIDs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: traitIDsRegex
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - Cytoscape
      x-accepts:
      - application/json
  /graphql:
    get:
      operationId: GraphQL_Get
      parameters:
      - explode: true
        in: query
        name: operationName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: variables
        required: false
        schema:
          additionalProperties:
            nullable: true
          type: object
        style: form
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - GraphQL
      x-accepts:
      - application/json
    post:
      operationId: GraphQL_Index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/xml:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          text/plain:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - GraphQL
      x-content-type: application/json
      x-accepts:
      - application/json
  /graphql-debug:
    post:
      operationId: GraphQL_Debug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/xml:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          text/plain:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - GraphQL
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v{version}/GraphvizDot/traitCentric:
    get:
      operationId: GraphvizDot_TraitCentric
      parameters:
      - explode: true
        in: query
        name: layerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: traitIDs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: traitIDsRegex
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - GraphvizDot
      x-accepts:
      - application/json
  /api/v{version}/GraphvizDot/layerCentric:
    get:
      operationId: GraphvizDot_LayerCentric
      parameters:
      - explode: true
        in: query
        name: layerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - GraphvizDot
      x-accepts:
      - application/json
  /api/v{version}/GridView/contexts:
    get:
      operationId: GridView_GetGridViewContexts
      parameters:
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      summary: Returns a list of contexts for grid view.
      tags:
      - GridView
      x-accepts:
      - application/json
  /api/v{version}/GridView/context/{name}:
    delete:
      operationId: GridView_DeleteContext
      parameters:
      - description: ""
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: If request is successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: If editing the context fails
      security:
      - oauth2: []
      summary: Deletes specific context
      tags:
      - GridView
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
    get:
      operationId: GridView_GetGridViewContext
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: If the name was not found or any other error occurred
      security:
      - oauth2: []
      summary: Returns a single context in full
      tags:
      - GridView
      x-accepts:
      - application/json
    put:
      operationId: GridView_EditContext
      parameters:
      - description: ""
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          text/plain:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditContextRequest'
        description: ""
      responses:
        "200":
          description: If request is successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: If editing the context fails
      security:
      - oauth2: []
      summary: Edits specific context
      tags:
      - GridView
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/GridView/context:
    post:
      operationId: GridView_AddContext
      parameters:
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          text/plain:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
        description: ""
      responses:
        "201":
          description: Returns the newly created context
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: If creating context fails
      security:
      - oauth2: []
      summary: Adds new context
      tags:
      - GridView
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/GridView/contexts/{context}/schema:
    get:
      operationId: GridView_GetSchema
      parameters:
      - description: ""
        explode: false
        in: path
        name: context
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ""
      security:
      - oauth2: []
      summary: Returns grid view schema for specific context
      tags:
      - GridView
      x-accepts:
      - application/json
  /api/v{version}/GridView/contexts/{context}/data:
    get:
      operationId: GridView_GetData
      parameters:
      - description: ""
        explode: false
        in: path
        name: context
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: If request is successful
        "400":
          description: If trait is not found
      security:
      - oauth2: []
      summary: Returns grid view data for specific context
      tags:
      - GridView
      x-accepts:
      - application/json
  /api/v{version}/GridView/contexts/{context}/change:
    post:
      operationId: GridView_ChangeData
      parameters:
      - description: ""
        explode: false
        in: path
        name: context
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          text/plain:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeDataRequest'
        description: ""
      responses:
        "200":
          description: If request is successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          description: If saving changes fails
      security:
      - oauth2: []
      summary: Saves grid view row changes and returns change results
      tags:
      - GridView
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/ImportExportLayer/exportLayer:
    get:
      operationId: ImportExportLayer_ExportLayer
      parameters:
      - explode: true
        in: query
        name: layerID
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ciids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - ImportExportLayer
      x-accepts:
      - application/json
  /api/v{version}/ImportExportLayer/importLayer:
    post:
      operationId: ImportExportLayer_ImportLayer
      parameters:
      - explode: true
        in: query
        name: overwriteLayerID
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              files:
                style: form
            schema:
              $ref: '#/components/schemas/AttributeValueImage_Post_request'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - ImportExportLayer
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/odata/{context}/$metadata:
    get:
      operationId: Metadata_GetMetadata
      parameters:
      - explode: false
        in: path
        name: context
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            text/plain:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/IEdmModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IEdmModel'
          description: Success
      security:
      - oauth2: []
      tags:
      - Metadata
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/odata/{context}:
    get:
      operationId: Metadata_GetServiceDocument
      parameters:
      - explode: false
        in: path
        name: context
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            text/plain:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
          description: Success
      security:
      - oauth2: []
      tags:
      - Metadata
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/ingest/genericJSON/data:
    post:
      operationId: PassiveData_Ingest
      parameters:
      - explode: true
        in: query
        name: readLayerIDs
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: writeLayerID
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/xml:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          text/plain:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          text/json:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenericInboundData'
        required: true
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v{version}/ingest/genericJSON/files:
    post:
      operationId: PassiveFiles_Ingest
      parameters:
      - explode: true
        in: query
        name: context
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              files:
                style: form
            schema:
              $ref: '#/components/schemas/AttributeValueImage_Post_request'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v{version}/ingest/genericJSON/manage/context:
    get:
      operationId: ManageContext_GetAllContexts
      parameters:
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=minimal:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=full:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.metadata=none:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.streaming=true:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/json;odata.streaming=false:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            application/octet-stream:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Context'
                type: array
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
    post:
      operationId: ManageContext_UpsertContext
      parameters:
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=minimal;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=minimal;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=minimal:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=full;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=full;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=full:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=none;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=none;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.metadata=none:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.streaming=true:
            schema:
              $ref: '#/components/schemas/Context'
          application/json;odata.streaming=false:
            schema:
              $ref: '#/components/schemas/Context'
          application/xml:
            schema:
              $ref: '#/components/schemas/Context'
          text/plain:
            schema:
              $ref: '#/components/schemas/Context'
          text/json:
            schema:
              $ref: '#/components/schemas/Context'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Context'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
            application/xml:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            text/plain:
              schema:
                $ref: '#/components/schemas/Context'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Context'
            text/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/ingest/genericJSON/manage/context/{id}:
    delete:
      operationId: ManageContext_RemoveContext
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                type: boolean
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                type: boolean
            application/json;odata.metadata=minimal:
              schema:
                type: boolean
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                type: boolean
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                type: boolean
            application/json;odata.metadata=full:
              schema:
                type: boolean
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                type: boolean
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                type: boolean
            application/json;odata.metadata=none:
              schema:
                type: boolean
            application/json;odata.streaming=true:
              schema:
                type: boolean
            application/json;odata.streaming=false:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
    get:
      operationId: ManageContext_GetContext
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
            application/xml:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=minimal:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=full:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.metadata=none:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.streaming=true:
              schema:
                $ref: '#/components/schemas/Context'
            application/json;odata.streaming=false:
              schema:
                $ref: '#/components/schemas/Context'
            text/plain:
              schema:
                $ref: '#/components/schemas/Context'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Context'
            text/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginGenericJSONIngest
      x-accepts:
      - application/json
      - application/json;odata.metadata=full
      - application/json;odata.metadata=full;odata.streaming=false
      - application/json;odata.metadata=full;odata.streaming=true
      - application/json;odata.metadata=minimal
      - application/json;odata.metadata=minimal;odata.streaming=false
      - application/json;odata.metadata=minimal;odata.streaming=true
      - application/json;odata.metadata=none
      - application/json;odata.metadata=none;odata.streaming=false
      - application/json;odata.metadata=none;odata.streaming=true
      - application/json;odata.streaming=false
      - application/json;odata.streaming=true
      - application/octet-stream
      - application/xml
      - text/json
      - text/plain
  /api/v{version}/ingest/insight-discovery/file:
    post:
      operationId: IngestFile_Ingest
      parameters:
      - explode: true
        in: query
        name: context
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
            schema:
              $ref: '#/components/schemas/IngestFile_Ingest_request'
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - OKPluginInsightDiscoveryIngest
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v{version}/RestartApplication/restart:
    get:
      operationId: RestartApplication_Restart
      parameters:
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - RestartApplication
      x-accepts:
      - application/json
  /api/v{version}/UsageStats/fetch:
    get:
      operationId: UsageStats_Fetch
      parameters:
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - oauth2: []
      tags:
      - UsageStats
      x-accepts:
      - application/json
components:
  schemas:
    AbstractInboundIDMethod:
      discriminator:
        mapping:
          OKPluginGenericJSONIngest.InboundIDMethodByData, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByData'
          OKPluginGenericJSONIngest.InboundIDMethodByAttribute, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByAttribute'
          OKPluginGenericJSONIngest.InboundIDMethodByRelatedTempID, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByRelatedTempID'
          OKPluginGenericJSONIngest.InboundIDMethodByTemporaryCIID, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByTemporaryCIID'
          OKPluginGenericJSONIngest.InboundIDMethodByByUnion, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByByUnion'
          OKPluginGenericJSONIngest.InboundIDMethodByIntersect, OKPluginGenericJSONIngest: '#/components/schemas/InboundIDMethodByIntersect'
        propertyName: type
      properties:
        type:
          type: string
      required:
      - type
      type: object
    AddContextRequest:
      example:
        configuration:
          writeLayer: writeLayer
          columns:
          - writeLayer: writeLayer
            sourceAttributeName: sourceAttributeName
            valueType: Text
            columnDescription: columnDescription
            sourceAttributePath:
            - sourceAttributePath
            - sourceAttributePath
          - writeLayer: writeLayer
            sourceAttributeName: sourceAttributeName
            valueType: Text
            columnDescription: columnDescription
            sourceAttributePath:
            - sourceAttributePath
            - sourceAttributePath
          trait: trait
          showCIIDColumn: true
          readLayerset:
          - readLayerset
          - readLayerset
        description: description
        id: id
        speakingName: speakingName
      properties:
        id:
          type: string
        speakingName:
          type: string
        description:
          type: string
        configuration:
          $ref: '#/components/schemas/GridViewConfiguration'
      type: object
    AnsibleInventoryScanDTO:
      example:
        yumUpdates:
          key: yumUpdates
        yumInstalled:
          key: yumInstalled
        yumRepos:
          key: yumRepos
        setupFacts:
          key: setupFacts
      properties:
        setupFacts:
          additionalProperties:
            type: string
          type: object
        yumInstalled:
          additionalProperties:
            type: string
          type: object
        yumRepos:
          additionalProperties:
            type: string
          type: object
        yumUpdates:
          additionalProperties:
            type: string
          type: object
      required:
      - setupFacts
      - yumInstalled
      - yumRepos
      - yumUpdates
      type: object
    AttributeValueDTO:
      example:
        values:
        - values
        - values
        isArray: true
        type: Text
      properties:
        type:
          $ref: '#/components/schemas/AttributeValueType'
        isArray:
          type: boolean
        values:
          items:
            type: string
          type: array
      type: object
    AttributeValueType:
      enum:
      - Text
      - MultilineText
      - Integer
      - JSON
      - YAML
      - Image
      - Mask
      - Double
      - Boolean
      - DateTimeWithOffset
      type: string
    ChangeDataCell:
      example:
        changeable: true
        id: id
        value:
          values:
          - values
          - values
          isArray: true
          type: Text
      properties:
        id:
          type: string
        value:
          $ref: '#/components/schemas/AttributeValueDTO'
        changeable:
          type: boolean
      type: object
    ChangeDataRequest:
      example:
        sparseRows:
        - cells:
          - changeable: true
            id: id
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          - changeable: true
            id: id
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          ciid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - cells:
          - changeable: true
            id: id
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          - changeable: true
            id: id
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          ciid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sparseRows:
          items:
            $ref: '#/components/schemas/SparseRow'
          type: array
      type: object
    Context:
      type: object
    EditContextRequest:
      example:
        configuration:
          writeLayer: writeLayer
          columns:
          - writeLayer: writeLayer
            sourceAttributeName: sourceAttributeName
            valueType: Text
            columnDescription: columnDescription
            sourceAttributePath:
            - sourceAttributePath
            - sourceAttributePath
          - writeLayer: writeLayer
            sourceAttributeName: sourceAttributeName
            valueType: Text
            columnDescription: columnDescription
            sourceAttributePath:
            - sourceAttributePath
            - sourceAttributePath
          trait: trait
          showCIIDColumn: true
          readLayerset:
          - readLayerset
          - readLayerset
        description: description
        speakingName: speakingName
      properties:
        speakingName:
          type: string
        description:
          type: string
        configuration:
          $ref: '#/components/schemas/GridViewConfiguration'
      type: object
    EdmContainerElementKind:
      enum:
      - None
      - EntitySet
      - ActionImport
      - FunctionImport
      - Singleton
      type: string
    EdmExpressionKind:
      enum:
      - None
      - BinaryConstant
      - BooleanConstant
      - DateTimeOffsetConstant
      - DecimalConstant
      - FloatingConstant
      - GuidConstant
      - IntegerConstant
      - StringConstant
      - DurationConstant
      - "Null"
      - Record
      - Collection
      - Path
      - If
      - Cast
      - IsType
      - FunctionApplication
      - LabeledExpressionReference
      - Labeled
      - PropertyPath
      - NavigationPropertyPath
      - DateConstant
      - TimeOfDayConstant
      - EnumMember
      - AnnotationPath
      type: string
    EdmSchemaElementKind:
      enum:
      - None
      - TypeDefinition
      - Term
      - Action
      - EntityContainer
      - Function
      type: string
    EdmTypeKind:
      enum:
      - None
      - Primitive
      - Entity
      - Complex
      - Collection
      - EntityReference
      - Enum
      - TypeDefinition
      - Untyped
      - Path
      type: string
    GenericInboundAttribute:
      example:
        name: name
        value:
          values:
          - values
          - values
          isArray: true
          type: Text
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/AttributeValueDTO'
      type: object
    GenericInboundCI:
      example:
        noFoundTargetCIHandling: CreateNew
        idMethod:
          attributes:
          - attributes
          - attributes
        attributes:
        - name: name
          value:
            values:
            - values
            - values
            isArray: true
            type: Text
        - name: name
          value:
            values:
            - values
            - values
            isArray: true
            type: Text
        tempID: tempID
        sameTempIDHandling: DropAndWarn
        sameTargetCIHandling: Error
      properties:
        tempID:
          type: string
        idMethod:
          $ref: '#/components/schemas/GenericInboundCI_idMethod'
        sameTempIDHandling:
          $ref: '#/components/schemas/SameTempIDHandling'
        sameTargetCIHandling:
          $ref: '#/components/schemas/SameTargetCIHandling'
        noFoundTargetCIHandling:
          $ref: '#/components/schemas/NoFoundTargetCIHandling'
        attributes:
          items:
            $ref: '#/components/schemas/GenericInboundAttribute'
          type: array
      type: object
    GenericInboundData:
      example:
        cis:
        - noFoundTargetCIHandling: CreateNew
          idMethod:
            attributes:
            - attributes
            - attributes
          attributes:
          - name: name
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          - name: name
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          tempID: tempID
          sameTempIDHandling: DropAndWarn
          sameTargetCIHandling: Error
        - noFoundTargetCIHandling: CreateNew
          idMethod:
            attributes:
            - attributes
            - attributes
          attributes:
          - name: name
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          - name: name
            value:
              values:
              - values
              - values
              isArray: true
              type: Text
          tempID: tempID
          sameTempIDHandling: DropAndWarn
          sameTargetCIHandling: Error
        relations:
        - predicate: predicate
          from: from
          to: to
        - predicate: predicate
          from: from
          to: to
      properties:
        cis:
          items:
            $ref: '#/components/schemas/GenericInboundCI'
          type: array
        relations:
          items:
            $ref: '#/components/schemas/GenericInboundRelation'
          type: array
      type: object
    GenericInboundRelation:
      example:
        predicate: predicate
        from: from
        to: to
      properties:
        from:
          type: string
        predicate:
          type: string
        to:
          type: string
      type: object
    GraphQLQuery:
      example:
        variables:
          key: ""
        query: query
        operationName: operationName
      properties:
        operationName:
          nullable: true
          type: string
        query:
          nullable: true
          type: string
        variables:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
      type: object
    GridViewColumn:
      example:
        writeLayer: writeLayer
        sourceAttributeName: sourceAttributeName
        valueType: Text
        columnDescription: columnDescription
        sourceAttributePath:
        - sourceAttributePath
        - sourceAttributePath
      properties:
        sourceAttributeName:
          type: string
        sourceAttributePath:
          items:
            type: string
          nullable: true
          type: array
        columnDescription:
          type: string
        valueType:
          $ref: '#/components/schemas/AttributeValueType'
        writeLayer:
          nullable: true
          type: string
      type: object
    GridViewConfiguration:
      example:
        writeLayer: writeLayer
        columns:
        - writeLayer: writeLayer
          sourceAttributeName: sourceAttributeName
          valueType: Text
          columnDescription: columnDescription
          sourceAttributePath:
          - sourceAttributePath
          - sourceAttributePath
        - writeLayer: writeLayer
          sourceAttributeName: sourceAttributeName
          valueType: Text
          columnDescription: columnDescription
          sourceAttributePath:
          - sourceAttributePath
          - sourceAttributePath
        trait: trait
        showCIIDColumn: true
        readLayerset:
        - readLayerset
        - readLayerset
      properties:
        showCIIDColumn:
          type: boolean
        writeLayer:
          type: string
        readLayerset:
          items:
            type: string
          type: array
        columns:
          items:
            $ref: '#/components/schemas/GridViewColumn'
          type: array
        trait:
          type: string
      type: object
    IEdmDirectValueAnnotationsManager:
      type: object
    IEdmEntityContainer:
      example:
        elements:
        - container: null
          containerElementKind: None
          name: name
        - container: null
          containerElementKind: None
          name: name
        namespace: namespace
        name: name
        schemaElementKind: null
      properties:
        elements:
          items:
            $ref: '#/components/schemas/IEdmEntityContainerElement'
          nullable: true
          readOnly: true
          type: array
        schemaElementKind:
          $ref: '#/components/schemas/EdmSchemaElementKind'
        namespace:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    IEdmEntityContainerElement:
      example:
        container: null
        containerElementKind: None
        name: name
      properties:
        containerElementKind:
          $ref: '#/components/schemas/EdmContainerElementKind'
        container:
          $ref: '#/components/schemas/IEdmEntityContainer'
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    IEdmExpression:
      example:
        expressionKind: None
      properties:
        expressionKind:
          $ref: '#/components/schemas/EdmExpressionKind'
      type: object
    IEdmModel:
      example:
        declaredNamespaces:
        - declaredNamespaces
        - declaredNamespaces
        vocabularyAnnotations:
        - qualifier: qualifier
          term:
            defaultValue: defaultValue
            namespace: namespace
            name: name
            appliesTo: appliesTo
            schemaElementKind: null
            type:
              isNullable: true
              definition:
                typeKind: None
          value:
            expressionKind: None
          target: "{}"
        - qualifier: qualifier
          term:
            defaultValue: defaultValue
            namespace: namespace
            name: name
            appliesTo: appliesTo
            schemaElementKind: null
            type:
              isNullable: true
              definition:
                typeKind: None
          value:
            expressionKind: None
          target: "{}"
        referencedModels:
        - null
        - null
        directValueAnnotationsManager: "{}"
        schemaElements:
        - namespace: namespace
          name: name
          schemaElementKind: None
        - namespace: namespace
          name: name
          schemaElementKind: None
        entityContainer:
          elements:
          - container: null
            containerElementKind: None
            name: name
          - container: null
            containerElementKind: None
            name: name
          namespace: namespace
          name: name
          schemaElementKind: null
      properties:
        schemaElements:
          items:
            $ref: '#/components/schemas/IEdmSchemaElement'
          nullable: true
          readOnly: true
          type: array
        vocabularyAnnotations:
          items:
            $ref: '#/components/schemas/IEdmVocabularyAnnotation'
          nullable: true
          readOnly: true
          type: array
        referencedModels:
          items:
            $ref: '#/components/schemas/IEdmModel'
          nullable: true
          readOnly: true
          type: array
        declaredNamespaces:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        directValueAnnotationsManager:
          type: object
        entityContainer:
          $ref: '#/components/schemas/IEdmEntityContainer'
      type: object
    IEdmSchemaElement:
      example:
        namespace: namespace
        name: name
        schemaElementKind: None
      properties:
        schemaElementKind:
          $ref: '#/components/schemas/EdmSchemaElementKind'
        namespace:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    IEdmTerm:
      example:
        defaultValue: defaultValue
        namespace: namespace
        name: name
        appliesTo: appliesTo
        schemaElementKind: null
        type:
          isNullable: true
          definition:
            typeKind: None
      properties:
        type:
          $ref: '#/components/schemas/IEdmTypeReference'
        appliesTo:
          nullable: true
          readOnly: true
          type: string
        defaultValue:
          nullable: true
          readOnly: true
          type: string
        schemaElementKind:
          $ref: '#/components/schemas/EdmSchemaElementKind'
        namespace:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    IEdmType:
      example:
        typeKind: None
      properties:
        typeKind:
          $ref: '#/components/schemas/EdmTypeKind'
      type: object
    IEdmTypeReference:
      example:
        isNullable: true
        definition:
          typeKind: None
      properties:
        isNullable:
          readOnly: true
          type: boolean
        definition:
          $ref: '#/components/schemas/IEdmType'
      type: object
    IEdmVocabularyAnnotatable:
      type: object
    IEdmVocabularyAnnotation:
      example:
        qualifier: qualifier
        term:
          defaultValue: defaultValue
          namespace: namespace
          name: name
          appliesTo: appliesTo
          schemaElementKind: null
          type:
            isNullable: true
            definition:
              typeKind: None
        value:
          expressionKind: None
        target: "{}"
      properties:
        qualifier:
          nullable: true
          readOnly: true
          type: string
        term:
          $ref: '#/components/schemas/IEdmTerm'
        target:
          type: object
        value:
          $ref: '#/components/schemas/IEdmExpression'
      type: object
    InboundIDMethodByAttribute:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      properties:
        attribute:
          $ref: '#/components/schemas/GenericInboundAttribute'
        modifiers:
          $ref: '#/components/schemas/InboundIDMethodByAttributeModifiers'
      type: object
    InboundIDMethodByAttributeModifiers:
      properties:
        caseInsensitive:
          type: boolean
      type: object
    InboundIDMethodByByUnion:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      properties:
        inner:
          items:
            oneOf:
            - $ref: '#/components/schemas/InboundIDMethodByData'
            - $ref: '#/components/schemas/InboundIDMethodByAttributeModifiers'
            - $ref: '#/components/schemas/InboundIDMethodByAttribute'
            - $ref: '#/components/schemas/InboundIDMethodByRelatedTempID'
            - $ref: '#/components/schemas/InboundIDMethodByTemporaryCIID'
            - $ref: '#/components/schemas/InboundIDMethodByByUnion'
            - $ref: '#/components/schemas/InboundIDMethodByIntersect'
          type: array
      type: object
    InboundIDMethodByData:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      example:
        attributes:
        - attributes
        - attributes
      properties:
        attributes:
          items:
            type: string
          type: array
      type: object
    InboundIDMethodByIntersect:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      properties:
        inner:
          items:
            oneOf:
            - $ref: '#/components/schemas/InboundIDMethodByData'
            - $ref: '#/components/schemas/InboundIDMethodByAttributeModifiers'
            - $ref: '#/components/schemas/InboundIDMethodByAttribute'
            - $ref: '#/components/schemas/InboundIDMethodByRelatedTempID'
            - $ref: '#/components/schemas/InboundIDMethodByTemporaryCIID'
            - $ref: '#/components/schemas/InboundIDMethodByByUnion'
            - $ref: '#/components/schemas/InboundIDMethodByIntersect'
          type: array
      type: object
    InboundIDMethodByRelatedTempID:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      properties:
        tempID:
          type: string
        outgoingRelation:
          type: boolean
        predicateID:
          type: string
      type: object
    InboundIDMethodByTemporaryCIID:
      allOf:
      - $ref: '#/components/schemas/AbstractInboundIDMethod'
      properties:
        tempID:
          type: string
      type: object
    NoFoundTargetCIHandling:
      enum:
      - CreateNew
      - CreateNewAndWarn
      - Drop
      type: string
    ODataEntitySetInfo:
      example:
        name: name
        typeAnnotation:
          typeName: typeName
        title: title
        url: https://openapi-generator.tech
      properties:
        typeAnnotation:
          $ref: '#/components/schemas/ODataTypeAnnotation'
        url:
          format: uri
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    ODataFunctionImportInfo:
      example:
        name: name
        typeAnnotation:
          typeName: typeName
        title: title
        url: https://openapi-generator.tech
      properties:
        typeAnnotation:
          $ref: '#/components/schemas/ODataTypeAnnotation'
        url:
          format: uri
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    ODataServiceDocument:
      example:
        functionImports:
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
        typeAnnotation:
          typeName: typeName
        singletons:
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
        entitySets:
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
        - name: name
          typeAnnotation:
            typeName: typeName
          title: title
          url: https://openapi-generator.tech
      properties:
        typeAnnotation:
          $ref: '#/components/schemas/ODataTypeAnnotation'
        entitySets:
          items:
            $ref: '#/components/schemas/ODataEntitySetInfo'
          nullable: true
          type: array
        singletons:
          items:
            $ref: '#/components/schemas/ODataSingletonInfo'
          nullable: true
          type: array
        functionImports:
          items:
            $ref: '#/components/schemas/ODataFunctionImportInfo'
          nullable: true
          type: array
      type: object
    ODataSingletonInfo:
      example:
        name: name
        typeAnnotation:
          typeName: typeName
        title: title
        url: https://openapi-generator.tech
      properties:
        typeAnnotation:
          $ref: '#/components/schemas/ODataTypeAnnotation'
        url:
          format: uri
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    ODataTypeAnnotation:
      example:
        typeName: typeName
      properties:
        typeName:
          nullable: true
          readOnly: true
          type: string
      type: object
    ProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    SameTargetCIHandling:
      enum:
      - Error
      - Drop
      - DropAndWarn
      - Evade
      - EvadeAndWarn
      - Merge
      type: string
    SameTempIDHandling:
      enum:
      - DropAndWarn
      - Drop
      type: string
    SparseRow:
      example:
        cells:
        - changeable: true
          id: id
          value:
            values:
            - values
            - values
            isArray: true
            type: Text
        - changeable: true
          id: id
          value:
            values:
            - values
            - values
            isArray: true
            type: Text
        ciid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ciid:
          format: uuid
          type: string
        cells:
          items:
            $ref: '#/components/schemas/ChangeDataCell'
          type: array
      type: object
    AttributeValueImage_Post_request:
      properties:
        files:
          items:
            format: binary
            type: string
          type: array
      required:
      - files
      type: object
    IngestFile_Ingest_request:
      properties:
        ContentType:
          type: string
        ContentDisposition:
          type: string
        Headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Length:
          format: int64
          type: integer
        Name:
          type: string
        FileName:
          type: string
      type: object
    GenericInboundCI_idMethod:
      oneOf:
      - $ref: '#/components/schemas/InboundIDMethodByData'
      - $ref: '#/components/schemas/InboundIDMethodByAttributeModifiers'
      - $ref: '#/components/schemas/InboundIDMethodByAttribute'
      - $ref: '#/components/schemas/InboundIDMethodByRelatedTempID'
      - $ref: '#/components/schemas/InboundIDMethodByTemporaryCIID'
      - $ref: '#/components/schemas/InboundIDMethodByByUnion'
      - $ref: '#/components/schemas/InboundIDMethodByIntersect'
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: "https://[keycloak-url]/auth/realms/acme/protocol/openid-connect/auth"
          refreshUrl: "https://[keycloak-url]/auth/realms/acme/protocol/openid-connect/token"
          scopes: {}
          tokenUrl: "https://[keycloak-url]/auth/realms/acme/protocol/openid-connect/token"
        clientCredentials:
          scopes: {}
          tokenUrl: "https://[keycloak-url]/auth/realms/acme/protocol/openid-connect/token"
      type: oauth2

